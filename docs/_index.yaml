# Copyright 2020 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
book_path: /quantum/_book.yaml
project_path: /quantum/_project.yaml
description: <!--no description-->
landing_page:
  custom_css_path: /site-assets/css/style.css
  rows:
  - heading: "TensorFlow Quantum is a library for hybrid quantum-classical machine learning."
    items:
    - classname: devsite-landing-row-50
      description: >
        <p>
        TensorFlow Quantum (TFQ) is a
        <a href='./concepts'>quantum machine learning</a> library for rapid
        prototyping of hybrid quantum-classical ML models. Research in
        quantum algorithms and applications can leverage Googleâ€™s quantum
        computing frameworks, all from within TensorFlow.
        </p>
        <p>
        TensorFlow Quantum focuses on <em>quantum data</em> and building
        <em>hybrid quantum-classical models</em>. It integrates quantum computing
        algorithms and logic designed in
        <a href="https://github.com/quantumlib/Cirq" class="external">Cirq</a>,
        and provides
        quantum computing primitives compatible with existing TensorFlow APIs,
        along with high-performance quantum circuit simulators. Read more in the
        <a href="https://arxiv.org/abs/2003.02989" class="external">TensorFlow Quantum white paper</a>.
        </p>
        <p>
        Start with the <a href="./overview">overview</a>, then run the
        <a href="./tutorials/hello_many_worlds">notebook tutorials</a>.
        </p>

      code_block: |
        <pre class = "prettyprint">
        # A hybrid quantum-classical model.
        model = tf.keras.Sequential([
            # Quantum circuit data comes in inside of tensors.
            tf.keras.Input(shape=(), dtype=tf.dtypes.string),

            # Parametrized Quantum Circuit (PQC) provides output
            # data from the input circuits run on a quantum computer.
            tfq.layers.PQC(my_circuit, [cirq.Z(q1), cirq.X(q0)]),

            # Output data from quantum computer passed through model.
            tf.keras.layers.Dense(50)
        ])
        </pre>

  - classname: devsite-landing-row-cards
    items:
    - heading: "Announcing<br>TensorFlow Quantum"
      image_path: /resources/images/google-research-card-16x9.png
      path: https://ai.googleblog.com/2020/03/announcing-tensorflow-quantum-open.html
      buttons:
      - label: "Read on the Google AI blog"
        path: https://ai.googleblog.com/2020/03/announcing-tensorflow-quantum-open.html
    - heading: "Programming a quantum computer with Cirq"
      youtube_id: 16ZfkPRVf2w
      buttons:
      - label: Watch the video
        path: https://www.youtube.com/watch?v=16ZfkPRVf2w
    - heading: "Quantum supremacy using a programmable superconducting processor"
      image_path: /resources/images/google-research-card-16x9.png
      path: https://ai.googleblog.com/2019/10/quantum-supremacy-using-programmable.html
      buttons:
      - label: "Read on the Google AI blog"
        path: https://ai.googleblog.com/2019/10/quantum-supremacy-using-programmable.html
    - heading: "TensorFlow Quantum on GitHub"
      image_path: /resources/images/github-card-16x9.png
      path: https://github.com/tensorflow/quantum
      buttons:
      - label: "View on GitHub"
        path: https://github.com/tensorflow/quantum
